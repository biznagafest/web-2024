---
import Footer from "../components/Footer.astro";
import Navigation from "../components/Navigation.astro";
import Notice from "../components/Notice.astro";
import { DATA } from "../data/data";
import CommonHead from "../components/CommonHead.astro";
import ButtonUp from "../components/ButtonUp.astro";
import type { Nullish } from "../utils/nullish";

export interface Props {
  title: string;
  lang: string;
  description?: Nullish<string>;
}

const { title, lang, description = "" } = Astro.props;
---

<!DOCTYPE html>
<html lang={lang}>
  <CommonHead title={title} description={description} />
  <body
    class="bg-light-background dark:bg-dark-background text-dark-background dark:text-light-background"
  >
    {
      DATA.welcomeBanner.isEnabled && (
        <Notice>
          <div class="bg-blue-100 dark:bg-green-900 dark:bg-opacity-30">
            <div class="wrapper px-6 flex flex-col gap-10">
              <h3 class="text-xl sm:text-2xl md:text-4xl font-bold text-center">
                ‚ú®¬°Hola a todos los asombrosos asistentes del BiznagaFest
                2024!‚ú®
              </h3>

              <div class="flex flex-col gap-5 text-lg">
                <p>
                  ¬°La emoci√≥n est√° en el aire y el evento est√° en pleno apogeo!
                  Estamos viendo charlas inspiradoras, participando en talleres
                  innovadores y construyendo conexiones incre√≠bles en este
                  epicentro de tecnolog√≠a.
                </p>
                <p>
                  ¬øPero sabes qu√© es a√∫n m√°s emocionante? La pr√≥xima edici√≥n del
                  BiznagaFest. S√≠, lo has o√≠do bien. La diversi√≥n no termina
                  aqu√≠. La pr√≥xima edici√≥n ser√° a√∫n m√°s grandiosa, con
                  conferencias a√∫n m√°s fascinantes, talleres a√∫n m√°s
                  interactivos y oportunidades de networking a√∫n m√°s valiosas.
                </p>
                <p>
                  ¬øPor qu√© esperar? Compra tu entrada para el pr√≥ximo
                  BiznagaFest ahora mismo. No te pierdas la oportunidad de ser
                  parte de este viaje incre√≠blemente enriquecedor en el mundo de
                  la tecnolog√≠a.
                </p>
                <p class="font-semibold">
                  ¬°Compra tus entradas ahora y prep√°rate para un futuro lleno de
                  innovaci√≥n y descubrimientos en el BiznagaFest del pr√≥ximo
                  a√±o! ¬°Nos vemos all√≠! üöÄ
                </p>
              </div>

              <a
                target="_blank"
                title="Comprar entradas"
                class="text-light-background bg-blue-600 hover:bg-blue-400 dark:bg-green-600 dark:hover:bg-green-400 w-fit px-5 py-2 rounded-md transition-colors"
                href="https://www.eventbrite.es/e/entradas-biznagafest-2025-1052728016837"
              >
                Comprar entradas
              </a>
            </div>
          </div>
        </Notice>
      )
    }
    <div class="overflow-hidden min-h-screen flex flex-col justify-between">
      <div>
        <Navigation />
        <slot />
      </div>
      <ButtonUp class="fixed bottom-1 right-1" />
      <Footer />
    </div>
    <script>
      function listenToDarkMode() {
        const html = document.documentElement;
        if (!!localStorage.getItem("dark")) {
          html.classList.add("dark");
        }
      }

      function listenAnimations() {
        const animations = [...document.querySelectorAll(".animate")];
        const callback = (
          entries: IntersectionObserverEntry[],
          observer: IntersectionObserver,
        ) => {
          entries.forEach((entry: IntersectionObserverEntry) => {
            let animationClasses = (
              entry.target.getAttribute("data-animation") ?? ""
            ).split(" ");

            if (entry.isIntersecting) {
              if (
                !entry.target.getAttribute("data-animation-repeat") &&
                entry.target.getAttribute("data-animation-repeated")
              ) {
                observer.unobserve(entry.target);
                return;
              }
              entry.target.setAttribute("data-animation-repeated", "true");
              animationClasses.forEach((className: any) => {
                entry.target.classList.add(className);
              });
              if (entry.target.classList.contains("invisible")) {
                entry.target.classList.remove("invisible");
              }
            } else if (
              !entry.isIntersecting &&
              entry.boundingClientRect.top > 0
            ) {
              animationClasses.forEach((className: any) => {
                entry.target.classList.remove(className);
              });
            }
          });
        };

        const observer = new IntersectionObserver(callback, {
          rootMargin: "200px 0px",
        });

        animations.forEach((animation) => observer.observe(animation));
      }

      function init() {
        listenToDarkMode();
        listenAnimations();
      }

      init();

      document.addEventListener("astro:after-swap", init);
    </script>
  </body>
</html>
