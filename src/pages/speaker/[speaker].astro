---
import EventCard from "../../components/EventCard.astro";
import Socials from "../../components/Socials.astro";
import { DATA } from "../../data/data";
import Layout from "../../layouts/Layout.astro";

export function getStaticPaths() {
  return DATA.speakers.map((_, index) => ({
    params: { speaker: index },
  }));
}

const { speaker } = Astro.params;

const speakerData = DATA.speakers[Number(speaker)];

if (!speakerData) {
  return Astro.redirect("/");
}

const events = DATA.events.filter((event) =>
  event.speakers.includes(speakerData.name as any),
);
---

<Layout
  title={`${speakerData.name} | ${DATA.title}`}
  description={speakerData.descriptionParagraphs.join(" ")}
  lang="es"
>
  <main class="flex flex-col gap-6 min-h-screen wrapper">
    <aside class="px-6">
      <div
        class="grid grid-cols-1 lg:grid-cols-[2fr_4fr] xl:grid-cols-[1fr_4fr] gap-4 md:gap-6 lg:gap-12 w-full"
      >
        <section class="w-full flex-grow flex flex-col gap-3 mx-auto">
          <img
            transition:name={`picture-speaker-${speaker}`}
            class="rounded-md border-8 border-blue-600 dark:border-blue-600 aspect-square object-cover"
            src={speakerData.picture}
            alt={`Picture of ${speakerData.name}`}
          />
          <Socials
            socials={speakerData.socials}
            class="text-4xl text-dark-background dark:text-light-background"
          />
        </section>
        <div class="flex flex-col gap-4">
          <h1
            transition:name={`name-speaker-${speaker}`}
            class="text-6xl md:text-8xl font-bold"
          >
            {speakerData.name}
          </h1>
          <h3
            class="text-2xl font-semibold text-orange-800 dark:text-orange-600"
          >
            {speakerData.position}
          </h3>
          <div class="flex flex-col gap-4 text-xl">
            {
              speakerData.descriptionParagraphs.map((descPar) => (
                <p>{descPar}</p>
              ))
            }
          </div>
        </div>
      </div>
    </aside>
    <section class="flex flex-col items-center py-2 px-6 pb-10 md:py-20 gap-3">
      {!!events.length && events.map((event) => <EventCard event={event} />)}
    </section>
  </main>
</Layout>
